package br.com.guilhermevillaca.padroes.comportamentais.interpreter;

/*
 * âœ… BenefÃ­cios do Interpreter
âœ… CÃ³digo aberto para expansÃ£o: Podemos adicionar novos operadores (*, /) sem modificar cÃ³digo existente.
âœ… FÃ¡cil manutenÃ§Ã£o: Cada expressÃ£o (NÃºmero, Soma, SubtraÃ§Ã£o) Ã© uma classe independente.
âœ… Flexibilidade: Podemos combinar expressÃµes para interpretar frases mais complexas no futuro.
âœ… OrganizaÃ§Ã£o clara: O cÃ³digo estÃ¡ bem estruturado e segue os princÃ­pios da programaÃ§Ã£o orientada a objetos.

Agora nosso cÃ³digo estÃ¡ limpo, expansÃ­vel e pronto para novas expressÃµes! ğŸš€
 */
public class Principal {

    public static void main(String[] args) {
        Expressao expressao1 = Interpretador.construirExpressao("10 + 5");
        System.out.println(expressao1.interpretar()); // 15

        Expressao expressao2 = Interpretador.construirExpressao("20 - 8");
        System.out.println(expressao2.interpretar()); // 12
    }

}
